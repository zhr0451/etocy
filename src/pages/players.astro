---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';

const players = await getCollection('players');
const sortedPlayers = players.sort((a, b) => {
	if (a.data.role !== b.data.role) {
		return a.data.role === 'dm' ? -1 : 1;
	}
	return a.data.character.localeCompare(b.data.character, 'ru');
});
---

<Layout
	title="Персонажи кампании «Последствия Чумы Заклинаний» — etocy.info"
	description="Полный состав героев кампании «Последствия Чумы Заклинаний» клуба «К20» с краткими досье и ссылками на подробности."
>
	<header class="page-heading">
		<h1>Игроки и персонажи</h1>
		<p>
			Этот раздел собирает в одном месте игроков, их персонажей и роли в кампании. Добавляйте
			новые файлы в <code>src/content/players</code>, чтобы пополнить список.
		</p>
	</header>

	<ul class="player-grid">
		{sortedPlayers.map((player) => (
			<li class="player-card">
				<div class="player-card__header">
					<p class="player-card__role">
						{player.data.role === 'dm' ? 'Ведущий кампании' : 'Игрок'}
					</p>
					<h2>
						<a href={`/players/${player.slug}/`}>{player.data.character}</a>
					</h2>
					{player.data.name.trim() !== '—' && (
						<p class="player-card__name">{player.data.name}</p>
					)}
				</div>

				<dl class="player-card__meta">
					<div>
						<dt>Класс</dt>
						<dd>{player.data.class}</dd>
					</div>
					<div>
						<dt>Уровень</dt>
						<dd>{player.data.level}</dd>
					</div>
					{player.data.race.trim().toLowerCase() !== 'неизвестно' && (
						<div>
							<dt>Раса</dt>
							<dd>{player.data.race}</dd>
						</div>
					)}
					{player.data.alignment && (
						<div>
							<dt>Мировоззрение</dt>
							<dd>{player.data.alignment}</dd>
						</div>
					)}
				</dl>

				{player.body && <p class="player-card__summary">{player.body}</p>}

				{player.data.tags.length > 0 && (
					<ul class="player-card__tags">
						{player.data.tags.map((tag) => (
							<li>{tag}</li>
						))}
					</ul>
				)}

				<a class="player-card__link" href={`/players/${player.slug}/`}>Читать заметку</a>
			</li>
		))}
	</ul>
</Layout>

<style>
	.page-heading {
		display: grid;
		gap: 0.75rem;
		margin-bottom: 1rem;
		color: var(--color-text);
	}

	.player-grid {
		list-style: none;
		margin: 0;
		padding: 0;
		display: grid;
		gap: 1.25rem;
		grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
	}

	.player-card {
		padding: 1.65rem;
		border-radius: 18px;
		border: 1px solid var(--color-border);
		background:
			linear-gradient(135deg, var(--color-nav-hover), transparent 60%),
			var(--color-surface);
		display: flex;
		flex-direction: column;
		gap: 1rem;
		box-shadow: 0 18px 36px var(--layer-shadow);
		position: relative;
	}

	.player-card__header {
		display: grid;
		gap: 0.4rem;
	}

	.player-card__role {
		margin: 0;
		text-transform: uppercase;
		font-size: 0.75rem;
		letter-spacing: 0.1em;
		color: var(--color-link-active);
	}

	.player-card__name {
		margin: 0;
		color: var(--color-muted);
	}

	.player-card__meta {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
		gap: 0.75rem;
		margin: 0;
	}

	.player-card__meta dt {
		font-size: 0.75rem;
		text-transform: uppercase;
		letter-spacing: 0.08em;
		color: var(--color-muted);
	}

	.player-card__meta dd {
		margin: 0;
		font-weight: 500;
	}

	.player-card__summary {
		margin: 0;
		color: var(--color-muted);
	}

	.player-card__tags {
		list-style: none;
		display: flex;
		flex-wrap: wrap;
		gap: 0.4rem;
		margin: 0;
		padding: 0;
	}

	.player-card__tags li {
		padding: 0.2rem 0.6rem;
		border-radius: 999px;
		background: var(--color-tag-bg);
		color: var(--color-link-active);
		font-size: 0.75rem;
	}

	.player-card__link {
		font-weight: 600;
		align-self: flex-start;
		color: var(--color-link-active);
	}

	@media (max-width: 600px) {
		.player-card {
			padding: 1.25rem;
		}

		.player-card__meta {
			grid-template-columns: 1fr;
		}

		.player-card__tags {
			gap: 0.3rem;
		}
	}
</style>
