---
type Props = {
	title?: string;
	description?: string;
};

const {
	title = 'etocy.info — Последствия Чумы Заклинаний',
	description =
		'Сайт компании "Последствия Чумы Заклинаний".'
} = Astro.props as Props;

const navLinks = [
	{ href: '/', label: 'Главная' },
	{ href: '/company/', label: 'О кампании' },
	{ href: '/sessions/', label: 'Сессии' },
	{ href: '/players/', label: 'Игроки' },
	{ href: '/diary/lasm/', label: 'Дневник Ласм' }
] as const;

const currentPath = Astro.url.pathname;
const isActive = (href: string) =>
	href === '/' ? currentPath === '/' : currentPath.startsWith(href);

const mobileMenuId = 'primary-navigation';
---

<!doctype html>
<html lang="ru" data-theme="light">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
			<link
				href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&family=Roboto+Slab:wght@500&display=swap"
				rel="stylesheet"
			/>
		<title>{title}</title>
		<meta name="description" content={description} />
		<script is:inline>
			const storageKey = 'etocy-theme';
			const root = document.documentElement;
			const prefersDark = window.matchMedia('(prefers-color-scheme: dark)');
			const setTheme = (value) => {
				const theme = value === 'dark' ? 'dark' : 'light';
				root.dataset.theme = theme;
				root.style.colorScheme = theme;
			};
			const saved = localStorage.getItem(storageKey);
			if (saved === 'light' || saved === 'dark') {
				setTheme(saved);
			} else {
				setTheme(prefersDark.matches ? 'dark' : 'light');
			}
			prefersDark.addEventListener('change', (event) => {
				if (!localStorage.getItem(storageKey)) {
					setTheme(event.matches ? 'dark' : 'light');
				}
			});
			window.__etocySetTheme = (value) => {
				setTheme(value);
				localStorage.setItem(storageKey, value);
			};
		</script>
	</head>
		<body>
			<a class="skip-link" href="#main">Перейти к содержимому</a>
			<header class="site-header">
				<div class="site-header__inner">
					<a class="site-logo" href="/">
						<img class="site-logo__icon" src="/icon.png" alt="" decoding="async" />
						<span>etocy.info</span>
					</a>
					<div class="site-header__actions">
						<div class="site-header__toggles">
							<button
								type="button"
								class="nav-toggle"
								data-nav-toggle
								aria-controls={mobileMenuId}
								aria-expanded="false"
							>
								<span class="nav-toggle__icon" aria-hidden="true"></span>
								<span class="sr-only">Открыть меню</span>
							</button>
							<button
								type="button"
								class="theme-toggle"
								data-theme-toggle
								aria-label="Переключить тему"
								aria-pressed="false"
							>
								<span aria-hidden="true" class="theme-toggle__icon">☀</span>
								<span class="sr-only" data-theme-label>Светлая тема</span>
							</button>
						</div>
						<nav aria-label="Основная навигация" class="site-header__nav">
							<ul class="nav-list" id={mobileMenuId} data-nav-list data-open="true">
								{navLinks.map((link) => (
									<li>
										<a class:list={['nav-link', { active: isActive(link.href) }]} href={link.href}>
											{link.label}
										</a>
									</li>
								))}
							</ul>
						</nav>
					</div>
				</div>
			</header>
		<main id="main" class="site-main">
			<slot />
		</main>
		<footer class="site-footer">
			<p>© {new Date().getFullYear()} etocy.info. Есть только один способ узнать.</p>
		</footer>
		<script is:inline>
			document.addEventListener('DOMContentLoaded', () => {
				const storageKey = 'etocy-theme';
				const root = document.documentElement;
				const themeToggle = document.querySelector('[data-theme-toggle]');
				const navToggle = document.querySelector('[data-nav-toggle]');
				const navList = document.querySelector('[data-nav-list]');

				if (themeToggle) {
					const label = themeToggle.querySelector('[data-theme-label]');
					const icon = themeToggle.querySelector('.theme-toggle__icon');
					const syncTheme = () => {
						const current = root.dataset.theme === 'dark' ? 'dark' : 'light';
						const isDark = current === 'dark';
						themeToggle.setAttribute('aria-pressed', isDark ? 'true' : 'false');
						themeToggle.setAttribute(
							'aria-label',
							isDark ? 'Переключить на светлую тему' : 'Переключить на тёмную тему'
						);
						if (label) {
							label.textContent = isDark ? 'Тёмная тема' : 'Светлая тема';
						}
					if (icon) {
						icon.textContent = isDark ? '◐' : '☀';
					}
					};
					themeToggle.addEventListener('click', () => {
						const next = root.dataset.theme === 'dark' ? 'light' : 'dark';
						if (window.__etocySetTheme) {
							window.__etocySetTheme(next);
						} else {
							const theme = next === 'dark' ? 'dark' : 'light';
							root.dataset.theme = theme;
							root.style.colorScheme = theme;
							localStorage.setItem(storageKey, theme);
						}
						syncTheme();
					});
					syncTheme();
				}

				if (navToggle && navList) {
					const openMenu = () => {
						navToggle.setAttribute('aria-expanded', 'true');
						navToggle.setAttribute('aria-label', 'Закрыть меню');
						navToggle.classList.add('nav-toggle--open');
						navList.setAttribute('data-open', 'true');
					};
					const closeMenu = () => {
						navToggle.setAttribute('aria-expanded', 'false');
						navToggle.setAttribute('aria-label', 'Открыть меню');
						navToggle.classList.remove('nav-toggle--open');
						navList.setAttribute('data-open', 'false');
					};
					navToggle.addEventListener('click', () => {
						const isOpen = navToggle.getAttribute('aria-expanded') === 'true';
						if (isOpen) {
							closeMenu();
						} else {
							openMenu();
						}
					});
					navList.querySelectorAll('a').forEach((link) => {
						link.addEventListener('click', () => {
							if (window.innerWidth <= 720) {
								closeMenu();
							}
						});
					});
					const syncMenuState = () => {
						if (window.innerWidth > 720) {
							navList.setAttribute('data-open', 'true');
							navToggle.classList.remove('nav-toggle--open');
							navToggle.setAttribute('aria-expanded', 'false');
							navToggle.setAttribute('aria-label', 'Открыть меню');
						} else if (navToggle.getAttribute('aria-expanded') !== 'true') {
							navList.setAttribute('data-open', 'false');
						}
					};
					window.addEventListener('resize', syncMenuState);
					syncMenuState();
				}
			});
		</script>
	</body>
</html>

<style>
	:root {
		color-scheme: dark;
		--font-family-base: 'Roboto', 'Helvetica Neue', Arial, sans-serif;
		--font-family-headings: 'Roboto Slab', 'Roboto', 'Helvetica Neue', Arial, sans-serif;
		--color-heading: #d6dbe8;
		--color-heading-soft: rgba(214, 219, 232, 0.82);
		--color-frame: #5a6a7d;
		--color-frame-dark: #3a4b5c;
		--color-bg: linear-gradient(160deg, rgba(14, 20, 27, 0.98) 0%, rgba(18, 26, 34, 0.96) 45%, rgba(24, 34, 42, 0.92) 100%);
		--color-surface: rgba(20, 27, 35, 0.92);
		--color-surface-strong: rgba(24, 32, 39, 0.96);
		--color-border: rgba(118, 138, 160, 0.24);
		--color-border-strong: rgba(118, 138, 160, 0.42);
		--color-text: #eef2f6;
		--color-muted: rgba(225, 232, 239, 0.72);
		--color-link: #82a9b7;
		--color-link-active: #c99a6a;
		--color-nav-hover: rgba(88, 118, 136, 0.26);
		--color-button-bg: linear-gradient(135deg, #4f6b7a 0%, #8fa8b0 100%);
		--color-button-text: #0f1d24;
		--color-shadow: 0 24px 44px rgba(7, 12, 18, 0.52);
		--color-accent-soft: rgba(129, 168, 184, 0.28);
		--color-accent-strong: rgba(129, 168, 184, 0.48);
		--color-accent-warm: rgba(201, 154, 106, 0.32);
		--layer-overlay: rgba(16, 24, 32, 0.16);
		--layer-shadow: rgba(7, 12, 18, 0.42);
		--page-gradient:
			radial-gradient(64% 66% at 18% 22%, rgba(129, 168, 184, 0.26), transparent 60%),
			radial-gradient(60% 62% at 82% 20%, rgba(201, 154, 106, 0.22), transparent 64%),
			radial-gradient(72% 72% at 52% 88%, rgba(140, 178, 170, 0.2), transparent 70%),
			linear-gradient(140deg, rgba(12, 20, 28, 0.98) 0%, rgba(22, 30, 38, 0.92) 48%, rgba(34, 44, 54, 0.88) 100%);
		--bg-gradient:
			radial-gradient(58% 60% at 20% 24%, rgba(129, 168, 184, 0.18), transparent 60%),
			radial-gradient(56% 58% at 78% 18%, rgba(201, 154, 106, 0.16), transparent 62%),
			linear-gradient(180deg, rgba(10, 18, 26, 0.96) 0%, rgba(16, 24, 32, 0.94) 48%, rgba(23, 31, 39, 0.92) 100%);
		--color-tag-bg: rgba(129, 168, 184, 0.18);
	}

	:root[data-theme='light'] {
		color-scheme: light;
		--color-heading: #3e4f63;
		--color-heading-soft: rgba(62, 79, 99, 0.82);
		--color-frame: #8595a6;
		--color-frame-dark: #637388;
		--color-bg: linear-gradient(160deg, rgba(244, 246, 249, 0.98) 0%, rgba(236, 240, 244, 0.95) 45%, rgba(244, 239, 233, 0.92) 100%);
		--color-surface: rgba(255, 255, 255, 0.94);
		--color-surface-strong: rgba(245, 247, 250, 0.96);
		--color-border: rgba(130, 146, 160, 0.22);
		--color-border-strong: rgba(130, 146, 160, 0.38);
		--color-text: #2f3944;
		--color-muted: rgba(76, 88, 102, 0.78);
		--color-link: #4f7c97;
		--color-link-active: #bb7a4d;
		--color-nav-hover: rgba(79, 124, 151, 0.18);
		--color-button-bg: linear-gradient(135deg, #4f7c97 0%, #a8bec8 100%);
		--color-button-text: #f4f7fa;
		--color-shadow: 0 20px 40px rgba(79, 124, 151, 0.24);
		--color-accent-soft: rgba(79, 124, 151, 0.24);
		--color-accent-strong: rgba(79, 124, 151, 0.4);
		--color-accent-warm: rgba(187, 122, 77, 0.25);
		--layer-overlay: rgba(60, 76, 92, 0.12);
		--layer-shadow: rgba(61, 74, 86, 0.2);
		--page-gradient:
			radial-gradient(58% 62% at 20% 24%, rgba(127, 163, 187, 0.2), transparent 60%),
			radial-gradient(56% 60% at 80% 18%, rgba(206, 178, 146, 0.18), transparent 62%),
			radial-gradient(70% 72% at 52% 88%, rgba(146, 177, 168, 0.16), transparent 70%),
			linear-gradient(140deg, rgba(246, 248, 251, 0.98) 0%, rgba(235, 240, 245, 0.92) 50%, rgba(216, 223, 229, 0.22) 100%);
		--bg-gradient:
			radial-gradient(56% 60% at 22% 24%, rgba(127, 163, 187, 0.16), transparent 60%),
			radial-gradient(54% 58% at 78% 18%, rgba(206, 178, 146, 0.14), transparent 60%),
			linear-gradient(180deg, rgba(246, 248, 251, 0.96) 0%, rgba(235, 240, 245, 0.94) 50%, rgba(238, 236, 233, 0.92) 100%);
		--color-tag-bg: rgba(79, 124, 151, 0.14);
	}

	* {
		box-sizing: border-box;
	}

	body {
		margin: 0;
		min-height: 100vh;
		background: var(--page-gradient), var(--bg-gradient), var(--color-bg);
		color: var(--color-text);
		font-family: var(--font-family-base);
		line-height: 1.6;
		display: flex;
		flex-direction: column;
		transition: background 0.4s ease, color 0.4s ease;
	}

	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		font-family: var(--font-family-headings);
		font-weight: 500;
		line-height: 1.25;
		letter-spacing: 0.01em;
		color: var(--color-heading);
	}

	a {
		color: var(--color-link);
		text-decoration: none;
		transition: color 0.2s ease;
		text-decoration-color: var(--color-accent-warm);
	}

	a:hover,
	a:focus-visible {
		color: var(--color-link-active);
		text-decoration: underline;
	}

	.skip-link {
		position: absolute;
		left: -999px;
		top: -999px;
		padding: 0.5rem 1rem;
		background: var(--color-link);
		color: #fff;
		border-radius: 6px;
	}

	.skip-link:focus {
		left: 1rem;
		top: 1rem;
		z-index: 1000;
	}

	.site-header {
		backdrop-filter: blur(14px);
		background:
			linear-gradient(135deg, var(--color-accent-soft), transparent 55%),
			var(--layer-overlay),
			var(--color-surface);
		border-bottom: 2px solid var(--color-frame);
		box-shadow: 0 8px 18px var(--layer-shadow);
		position: sticky;
		top: 0;
		z-index: 100;
		--header-gap: 0.8rem;
		transition: background 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;
	}

	.site-header__inner {
		max-width: 960px;
		margin: 0 auto;
		padding: 1rem 1.5rem;
		display: flex;
		align-items: center;
		justify-content: space-between;
		gap: 1rem;
	}

		.site-logo {
			display: inline-flex;
			align-items: center;
			gap: 0.5rem;
			font-family: var(--font-family-headings);
			font-weight: 500;
			font-size: 1.2rem;
			line-height: 1;
			color: var(--color-heading);
			letter-spacing: 0.05em;
			text-transform: uppercase;
		}

		.site-logo__icon {
			width: 1.2em;
			height: 1.2em;
			flex-shrink: 0;
			object-fit: contain;
			display: block;
			border-radius: 8px;
			box-shadow: 0 8px 14px var(--layer-shadow);
		}

	.site-header__actions {
		display: flex;
		align-items: center;
		gap: var(--header-gap);
		width: 100%;
	}

	.site-header__nav {
		order: 1;
		flex: 1 1 auto;
	}

	.site-header__toggles {
		display: flex;
		align-items: center;
		gap: var(--header-gap);
		order: 2;
		margin-left: auto;
	}

	.nav-list {
		margin: 0;
		padding: 0;
		display: flex;
		gap: var(--header-gap);
		list-style: none;
	}

	.nav-toggle {
		display: none;
		padding: 0.35rem;
		border: 1px solid var(--color-border);
		background: var(--color-surface-strong);
		border-radius: 8px;
		cursor: pointer;
		width: 2.6rem;
		height: 2.6rem;
		align-items: center;
		justify-content: center;
		transition: border-color 0.2s ease, background 0.2s ease;
	}

	.nav-toggle:hover,
	.nav-toggle:focus-visible {
		border-color: var(--color-link-active);
	}

	.nav-toggle__icon,
	.nav-toggle__icon::before,
	.nav-toggle__icon::after {
		display: block;
		width: 1.4rem;
		height: 2px;
		border-radius: 999px;
		background: var(--color-text);
		transition: transform 0.2s ease, opacity 0.2s ease;
		content: '';
	}

	.nav-toggle__icon {
		position: relative;
	}

	.nav-toggle__icon::before,
	.nav-toggle__icon::after {
		position: absolute;
		left: 0;
	}

	.nav-toggle__icon::before {
		top: -6px;
	}

	.nav-toggle__icon::after {
		bottom: -6px;
	}

	.nav-toggle--open .nav-toggle__icon {
		background: transparent;
	}

	.nav-toggle--open .nav-toggle__icon::before {
		transform: translateY(6px) rotate(45deg);
	}

	.nav-toggle--open .nav-toggle__icon::after {
		transform: translateY(-6px) rotate(-45deg);
	}

	.nav-link {
		font-family: var(--font-family-headings);
		font-weight: 500;
		padding: 0.4rem 0.75rem;
		border-radius: 999px;
		transition: background 0.2s ease, color 0.2s ease;
		color: var(--color-text);
		border: 1px solid transparent;
	}

	.nav-link:hover,
	.nav-link:focus-visible {
		background: var(--color-nav-hover);
		border-color: var(--color-accent-soft);
	}

	.nav-link.active {
		background: linear-gradient(135deg, var(--color-accent-soft), transparent 70%), var(--color-nav-hover);
		color: var(--color-link-active);
		border: 1px solid var(--color-accent-strong);
	}

	.theme-toggle {
		display: inline-flex;
		align-items: center;
		justify-content: center;
		padding: 0.35rem;
		border-radius: 999px;
		border: 1px solid var(--color-accent-soft);
		background: var(--color-surface-strong);
		color: var(--color-text);
		width: 2.4rem;
		height: 2.4rem;
		cursor: pointer;
		transition: background 0.2s ease, border-color 0.2s ease, color 0.2s ease;
	}

	.theme-toggle:hover,
	.theme-toggle:focus-visible {
		border-color: var(--color-frame);
		color: var(--color-link-active);
	}

	.theme-toggle__icon {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 1.2rem;
		height: 1.2rem;
		font-size: 1rem;
		line-height: 1;
	}

	.sr-only {
		position: absolute;
		width: 1px;
		height: 1px;
		padding: 0;
		margin: -1px;
		overflow: hidden;
		clip: rect(0, 0, 0, 0);
		white-space: nowrap;
		border: 0;
	}

	.site-main {
		flex: 1 0 auto;
		max-width: 960px;
		margin: 0 auto;
		padding: 3rem 2rem 3.5rem;
		display: flex;
		flex-direction: column;
		gap: 2.25rem;
		transition: color 0.3s ease;
		background:
			linear-gradient(135deg, var(--color-accent-soft), transparent 55%),
			linear-gradient(315deg, var(--color-accent-warm), transparent 52%),
			var(--color-surface);
		border: 1px solid var(--color-border);
		border-radius: 22px;
		box-shadow: 0 26px 50px var(--layer-shadow);
	}

	.site-footer {
		border-top: 2px solid var(--color-frame);
		padding: 1.5rem;
		text-align: center;
		font-size: 0.9rem;
		color: var(--color-muted);
		background: linear-gradient(180deg, var(--color-accent-soft), transparent 70%), var(--color-surface);
		box-shadow: inset 0 8px 16px var(--layer-overlay);
	}

	@media (max-width: 720px) {
		.site-header__inner {
			flex-direction: column;
			align-items: stretch;
			gap: 0.75rem;
		}

		.site-header__actions {
			width: 100%;
			flex-direction: column;
			align-items: stretch;
			gap: 0.5rem;
		}

		.site-header__toggles {
			order: 1;
			width: 100%;
			display: flex;
			align-items: center;
			justify-content: space-between;
			gap: 0.5rem;
			margin-left: 0;
		}

		.site-header__nav {
			order: 2;
		}

		.nav-toggle {
			display: inline-flex;
		}

		.nav-list {
			display: none;
			flex-direction: column;
			gap: 0.5rem;
			padding: 0.75rem 0;
		}

		.nav-list[data-open='true'] {
			display: flex;
		}

		.nav-link {
			width: 100%;
			padding: 0.6rem 0.75rem;
		}

		.theme-toggle {
			align-self: auto;
		}

		.site-main {
			padding: 1.75rem 1rem 2.25rem;
		}
	}
</style>
